#!/bin/sh
# Display the current battery status.

notify() {
    notify-send \
        --icon=battery-good-symbolic \
        --expire-time=4000 \
        --hint=string:x-canonical-private-synchronous:battery \
        "Battery" "$1"
}

case "$BLOCK_BUTTON" in
    1) notify "$(acpi -b | awk -F ': |, ' 'NR==2{printf "%s\n%s\n", $2, $4}')" ;;
    6) terminal -e "$EDITOR" "$0" ;;
esac

. sb-theme

# Loop through all attached batteries.
for battery in /sys/class/power_supply/BAT?*; do
    # If non-first battery, print a space separator.
    [ -n "${capacity+x}" ] && printf " "

    capacity="$(cat "$battery/capacity" 2>&1)"
    if [ "$capacity" -gt 90 ]; then
        status="󱊣"
    elif [ "$capacity" -le 90 ]; then
        status="󰂂"
    elif [ "$capacity" -le 80 ]; then
        status="󰂁"
    elif [ "$capacity" -le 70 ]; then
        status="󰂀"
    elif [ "$capacity" -le 60 ]; then
        status="󰁿"
    elif [ "$capacity" -le 50 ]; then
        status="󰁾"
    elif [ "$capacity" -le 40 ]; then
        status="󰁽"
    elif [ "$capacity" -le 30 ]; then
        status="󰁼"
    elif [ "$capacity" -le 20 ]; then
        status="󰁻"
    elif [ "$capacity" -le 10 ]; then
        status="󰁺"
    else
        status="󰂎"
    fi

    case "$(cat "$battery/status" 2>&1)" in
        Full) status="" ;;
        Discharging)
            if [ "$capacity" -le 20 ]; then
                status="$status"
                color=1
            fi
            ;;
        Charging) status="󰚥$status" ;;
        "Not charging") status="󱞜" ;;
        Unknown) status="? $status" ;;
        *) exit 1 ;;
    esac

    display "^c#24273Ab#4ae172^ $status ^b#24273Ac#4ae172^ $capacity%" "$color"
done
