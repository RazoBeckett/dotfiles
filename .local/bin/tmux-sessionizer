#!/usr/bin/env bash

# Made by @theprimeagen, with enhancements!

SEARCH_PATHS=(
	~/Developer/work
	~/Developer/personal
	~/Developer/forks
	~/Developer/devops
)

# Ensure necessary commands are available
for cmd in find fzf tmux; do
	if ! command -v "$cmd" &>/dev/null; then
		echo "Error: '$cmd' is not installed." >&2
		exit 1
	fi
done

# Select directory
if [[ $# -eq 1 ]]; then
	selected=$1
else
	selected=$(
		find "${SEARCH_PATHS[@]}" -mindepth 1 -maxdepth 1 -type d 2>/dev/null |
			fzf --reverse --preview='tree -C {}' \
				--bind "alt-n:execute(
				echo -n 'New folder name: ' > /dev/tty;
				read new_dir < /dev/tty;
				mkdir -p \$(dirname {})/\"\$new_dir\"
			)+reload(find ${SEARCH_PATHS[*]} -mindepth 1 -maxdepth 1 -type d 2>/dev/null)" \
				--bind "alt-c:execute(
				echo -n 'Repo to clone: ' > /dev/tty;
				read repo_link < /dev/tty;
				(cd \$(dirname {}) && git clone \$repo_link)
			)+reload(find ${SEARCH_PATHS[*]} -mindepth 1 -maxdepth 1 -type d 2>/dev/null)" \
				--bind "alt-d:execute(
				echo -n 'Delete {}? [y/N]: ' > /dev/tty;
				read answer < /dev/tty;
				[[ \"\$answer\" == [yY] ]] && rm -rf {}
			)+reload(find ${SEARCH_PATHS[*]} -mindepth 1 -maxdepth 1 -type d 2>/dev/null)"
	)

fi

[[ -z $selected ]] && exit 0

selected_name=$(basename "$selected" | tr ":,. " "____")
tmux_running=$(pgrep tmux)

if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
	# Create a new session and open nvim in the first window
	tmux new-session -ds "$selected_name" -c "$selected" "nvim; $SHELL"
	# Create the second window with a shell prompt
	tmux neww -d -t "$selected_name:2" -n "cmd" -c "$selected"
	# Attach to the session
	tmux attach-session -t "$selected_name"
	exit 0
fi

if ! tmux has-session -t="$selected_name" 2>/dev/null; then
	tmux new-session -ds "$selected_name" -c "$selected" "nvim; $SHELL"
	tmux neww -d -t "$selected_name:2" -n "cmd" -c "$selected"
fi

if [[ -n $TMUX ]]; then
	tmux switch-client -t "$selected_name"
else
	tmux attach-session -t "$selected_name"
fi
