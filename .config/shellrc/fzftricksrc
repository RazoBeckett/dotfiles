#!/bin/env bash

# FZF default command
export FZF_DEFAULT_COMMAND='fd --hidden --strip-cwd-prefix --exclude .git'

# FZF catppuccin macchiato --
export FZF_DEFAULT_OPTS=" \
--color=spinner:#f4dbd6,hl:#ed8796 \
--color=fg:#cad3f5,header:#ed8796,info:#c6a0f6,pointer:#f4dbd6 \
--color=marker:#f4dbd6,fg+:#cad3f5,prompt:#c6a0f6,hl+:#ed8796 \
--prompt='  ' --marker='󰫢 ' --pointer='' --separator='─' --scrollbar=''"

# FZF Ctrl-T: search for files
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

# FZF Ctrl-R: history search
export FZF_CTRL_R_OPTS='--prompt=" " --height 40% --layout=reverse'

# FZF Alt-C: change directory
export FZF_ALT_C_COMMAND="fd --type d . --color=auto --hidden --exclude .git"
export FZF_ALT_C_OPTS="--prompt='󰥩  ' --walker-skip .git,node_modules,target --preview 'tree -C {}'"

# FZF FZF_COMPLETION_TRIGGER: trigger completion
_fzf_compgen_path() {
	fd --hidden --exclude .git . "$1"
}

# use fd to generate the list for directory completion
_fzf_compgen_dir() {
	fd --type d --hidden --exclude .git . "$1"
}

asong() {
	local songs
	songs=$(find ~/Music -maxdepth 1 -type f \( -name '*.mp3' -o -name '*.flac' -o -name '*.aac' -o -name '*.wav' -o -name '*.m4a' \) | sort)

	local song
	song=$(echo "$songs" | awk -F/ '{print $NF}' | fzf --layout=reverse \
		--border=rounded --border-label="Press ESC to exit" --prompt="  " --pointer="󰽴" --marker="󰷞 ")

	# Check if a song was selected
	if [[ -n "$song" ]]; then
		# Get the full path of the selected song
		full_path=$(echo "$songs" | grep "/$song$")
		# Play the song using mpv with the full path
		mpv --no-video "$full_path"
		# Call asong() recursively for continuous song selection
		asong
	else
		pkill mpv
		echo -e "\nNo song selected. Exiting."
	fi
}

FOF() {
	local selected_file
	selected_file=$(fd --type f | fzf --preview='bat --color=always {}')

	if [ -n "$selected_file" ]; then
		xdg-open "$selected_file"
		echo "$selected_file" | cb
	fi
}

FSF() {
	local selected_file
	selected_file=$(fd --type f | fzf --preview='bat --color=always {}')

	if [ -n "$selected_file" ]; then
		realpath "$selected_file" | xclip -selection clipboard
	fi
}
